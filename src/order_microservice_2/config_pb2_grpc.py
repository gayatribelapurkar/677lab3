# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import config_pb2 as config__pb2


class ConfigStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddToConf = channel.unary_unary(
                '/Config/AddToConf',
                request_serializer=config__pb2.addToConfRequest.SerializeToString,
                response_deserializer=config__pb2.addToConfReply.FromString,
                )
        self.RemoveOrderHost = channel.unary_unary(
                '/Config/RemoveOrderHost',
                request_serializer=config__pb2.removeOrderHostRequest.SerializeToString,
                response_deserializer=config__pb2.removeOrderHostReply.FromString,
                )
        self.GetConfigDetails = channel.unary_unary(
                '/Config/GetConfigDetails',
                request_serializer=config__pb2.getConfigRequest.SerializeToString,
                response_deserializer=config__pb2.getConfigDetailsReply.FromString,
                )


class ConfigServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddToConf(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveOrderHost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfigDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConfigServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddToConf': grpc.unary_unary_rpc_method_handler(
                    servicer.AddToConf,
                    request_deserializer=config__pb2.addToConfRequest.FromString,
                    response_serializer=config__pb2.addToConfReply.SerializeToString,
            ),
            'RemoveOrderHost': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveOrderHost,
                    request_deserializer=config__pb2.removeOrderHostRequest.FromString,
                    response_serializer=config__pb2.removeOrderHostReply.SerializeToString,
            ),
            'GetConfigDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfigDetails,
                    request_deserializer=config__pb2.getConfigRequest.FromString,
                    response_serializer=config__pb2.getConfigDetailsReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Config', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Config(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddToConf(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Config/AddToConf',
            config__pb2.addToConfRequest.SerializeToString,
            config__pb2.addToConfReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveOrderHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Config/RemoveOrderHost',
            config__pb2.removeOrderHostRequest.SerializeToString,
            config__pb2.removeOrderHostReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConfigDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Config/GetConfigDetails',
            config__pb2.getConfigRequest.SerializeToString,
            config__pb2.getConfigDetailsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
